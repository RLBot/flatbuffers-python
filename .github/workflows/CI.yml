# This file is autogenerated by maturin v1.3.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          rust-toolchain: nightly
          args: --release --out dist --find-interpreter -Z build-std=std,panic_abort
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            rustup component add rustfmt
            rustup component add rust-src --toolchain nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Rust nightly
        run: |
          rustup toolchain install nightly
          rustup component add rust-src --toolchain nightly
          rustup component add rustfmt --toolchain nightly
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          rust-toolchain: nightly
          args: --release --out dist --find-interpreter -Z build-std=std,panic_abort
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          rust-toolchain: beta
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, sdist]
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: "true"
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing artifacts/*
